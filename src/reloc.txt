#include <stdlib.h>
#include <stdio.h>

#include <reloc.h>
#include <lex.h>
#include <symb.h>
#include <verif.h>
#include <liste.h>

reloc* init_entree_reloc(int d, opestruct* o, symb* e)Â {
    reloc* r = calloc(1,sizeof(reloc*));
    if(r==NULL) { printf("Erreur allocation table de relocation"); }

    r->dec_inst = d;
    r->etiquette = e;
    switch (o->ope_typ) { /*///////////////////////////////////////////////////*/
      case WRD:
        r->rel_type = R_MIPS_32;
        break;
      case ABS:
        r->rel_type = R_MIPS_26;
        break;
      case IMD:
        r->rel_type = R_MIPS_LO16;
        break;
      case REG: /* CAS IMPOSSIBLE EN ATTENDANT DE SAVOIR QUOI METTRE */
        r->rel_type = R_MIPS_HI16;
        break;
      default :
       r->rel_type = ERR_TYP_RELOC;
       break;
    }
    return r;
}

reloc* creer_table_reloc(Liste inst_l, symb* symb_t) {
  Liste pl=inst_l;
  reloc* reloc_t=NULL;
  int i=0;
  while(!liste_vide(pl)) {
    int j=0;
    for(j=0;j<3;j++) {
      symb* etiq_p = rech_mot(pl->val->Operande[j]->opeval,symb_t);
      if(etiq_p!=NULL) {
        (reloc_t+i)=init_entree_reloc(pl->val->inst->deca, pl->val->Operande[j], etiq_p);
        i++;
      }
      pl=pl->suiv;
    }
  }
  return reloc_t;
}
